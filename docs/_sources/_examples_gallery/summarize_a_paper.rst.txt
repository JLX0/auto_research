
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "_examples_gallery/summarize_a_paper.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download__examples_gallery_summarize_a_paper.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_gallery_summarize_a_paper.py:


.. _summarize_a_paper_page:

Summarize a Paper
=====================================

This script demonstrates the usage of `AutoSurvey` from the :mod:`auto_research.survey.core` module to:

- Select a PDF file from a specified folder.
- Retrieve an API key for the LLM.
- Run an automated survey analysis on the selected PDF using the LLM.

To get started with the package, you need to set up API keys. For detailed instructions, see :ref:`setting_up_api_keys`.

This script assumes that:

- At least one valid PDF file of the article is available. (located at "sample_articles/")
- A valid `key.json` file is available (located at the current working directory (""))

The process involves user interaction, including selecting a PDF file.

Below is an example output from the following input:

- 3

.. GENERATED FROM PYTHON SOURCE LINES 27-75




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Available PDF files:
    0: BOHB Robust and Efficient Hyperparameter Optimization at Scale.pdf
    1: A survey on evaluation of large language models.pdf
    2: The AI Scientist Towards Fully Automated Open-Ended Scientific Discovery.pdf
    3: Large Language Models Synergize with Automated Machine Learning.pdf
    4: Active Learning for Distributionally Robust Level-Set Estimation.pdf
    Enter the index of the file you want to process: Begin analyzing the article located at sample_articles/Large Language Models Synergize with Automated Machine Learning.pdf
    Summary information not found in storage
    Extracting from paper.
    ---extracting abstract---
    Operation under time limit: attempt 1 of 3
    The operation finishes in time
    ---extracting introduction---
    Operation under time limit: attempt 1 of 3
    The operation finishes in time
    ---extracting discussion---
    Operation under time limit: attempt 1 of 3
    The operation finishes in time
    ---extracting conclusion---
    Operation under time limit: attempt 1 of 3
    The operation finishes in time
    ---summarizing---
    Operation under time limit: attempt 1 of 3
    The operation finishes in time
    The summary is:

    1. The main topic: The paper focuses on the novel application of program synthesis for machine learning (ML) tasks, integrating large language models (LLMs) and automated machine learning (autoML) to fully automate the generation and optimization of ML programs based solely on textual task descriptions.

    2. Existing problems: Previous studies in program synthesis have mainly addressed traditional coding problems, neglecting the unique challenges of ML program synthesis, such as the increased length and diversity of code, the complexity of performance evaluations, and the need for compatibility among various components in the ML workflow.

    3. The main contributions: The paper presents a framework called Contextual Modular Generation, which automates the generation and optimization of ML programs through modular generation of code components, while introducing a novel testing technique called Constrained Generative Unit Testing to ensure compatibility and performance through numerical evaluations.

    4. Experimental results: The authors conducted experiments across 12 ML tasks, including traditional ML algorithms, computer vision, and natural language processing, demonstrating that their framework outperforms existing methods in 10 of the tasks. They utilized metrics related to program performance improvements and noted significant enhancement due to the automated optimization processes provided by autoML.

    5. Conclusions: The study finds that combining LLMs with autoML represents a significant step forward in automating the process of ML program creation, achieving better performance in various tasks and emphasizing the need for further research in automating higher-complexity ML challenges. Future directions include expanding candidate solution spaces and establishing rigorous benchmarks to compare automated and human-generated solutions in competitive settings.
    The total cost is 0.0027094500000000004 USD






|

.. code-block:: Python


    from __future__ import annotations

    from LLM_utils.inquiry import get_api_key
    from auto_research.survey.core import AutoSurvey
    from auto_research.utils.files import select_pdf_file


    def main() -> None:
        """
        Main function to run the auto survey process.

        This function handles the workflow of selecting a PDF file, getting the API key,
        and running the survey analysis.

        Example:
            # Sample usage:
            main()  # This will start the interactive process

        Parameters
        ----------
        None

        Returns
        -------
        None
        """

        # Specify the folder containing the target PDF files.
        sample_folder = "sample_articles/"

        # Select a PDF file from the specified folder.
        selected_file, file_path = select_pdf_file(sample_folder)

        # Retrieve the API key for the LLM.
        # This script assumes a valid API key is located at the specified path.
        key = get_api_key("", "OpenAI")

        # Initialize the AutoSurvey instance with the specified parameters.
        auto_survey_instance = AutoSurvey(
            key, "gpt-4o-mini", file_path, False, "summarize_computer_science"
        )

        # Run the automated survey analysis.
        auto_survey_instance.run()


    if __name__ == "__main__":
        main()

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 49.242 seconds)


.. _sphx_glr_download__examples_gallery_summarize_a_paper.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: summarize_a_paper.ipynb <summarize_a_paper.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: summarize_a_paper.py <summarize_a_paper.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: summarize_a_paper.zip <summarize_a_paper.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
